.include "m16def.inc" ; подключение библиотеки для работы с ATmega16
.list ; включение листинга
.def temp=r16 ; определение главного рабочего регистра
.def kold=r17
.def k___=r18
.def s___=r19
;--------------------------------------------
.cseg ; выбор сегмента программного кода
.org 0 ; установка текущего адреса на ноль
;--------------------------------------------
ldi temp,0x80 ; выключение компаратора
out acsr,temp
;--------------------------------------------
ldi temp,0x00 ; 0 --> temp
out ddrd,temp ; Назначаем порт rd на ввод (00000000 --> ddrd)
ldi temp,0xFF ; 0xff --> temp
out ddrb,temp ; Назначаем порт rb на вывод (11111111 --> ddrb)
out portd,temp ; Подключаем подтягивающие резисторы (11111111 --> portd)
;---------------------------------------------
ldi kold, 0x00 ; 0--->kold
ldi s___, 0x00 ; 0--->s___
out portb, s___ ; Вывели s___(=0)
;---------------------------------------------
read: ;
in k___, pind ; Считали содержимое порта pd (--->k___)
cp k___, kold ; Сравнили k___ и kold
breq read ; Если k___=kold, read
tst kold ; Проверили kold
brne remem ; Если kold!=0, remen
tst k___ ; Проверили k___
breq remem ; Если k___=0, remem
jmp lbl1 ;
;---------------------------------------------
remem: ;
mov kold, k___ ; Записали k___ в kold
jmp read ; Вернулись в read
;---------------------------------------------
lbl1: ;
cpi k___, 0x01 ; Сравнили k___ и 1
brne lbl2 ; Если k___!=1, lbl2
cpi s___, 0x09 ; Сравнили s___ и 9
brne lbl_1 ; Если s___!=9, lbl_1
clr s___ ; 0--->s___
jmp print ; Перешли на Вывод
lbl_1: ;
inc s___ ; s___+1--->s___
jmp print ; Перешли на Вывод
;---------------------------------------------
lbl2: ;
cpi k___, 0x02 ; Сравнили k___ и 2
brne lbl4 ; Если k___!=2, lbl4
cpi s___, 0x00 ; Сравнили s___ и 0
brne lbl_2 ; Если s___!=0, lbl_2
ldi s___, 0x09 ; 9--->s___
jmp print ; Перешли на Вывод
lbl_2: ;
dec s___ ; s___-1--->s___
jmp print ; Перешли на Вывод
;---------------------------------------------
lbl4: ;
cpi k___, 0x04 ; Сравнили k___ и 4
brne lbl8 ; Если k___!=4, lbl8
cpi s___, 0x08 ; Сравнили s___ и 8
brlo lbl_4 ; Если s___<8, lbl_4
ldi s___, 0x09 ; 9--->s___
jmp print ; Перешли на Вывод
lbl_4: ;
inc s___ ; ...
inc s___ ; s___+2--->s___
jmp print ; Перешли на Вывод
;---------------------------------------------
lbl8: ;
cpi k___, 0x08 ; Сравнили k___ и 8
brne remem ; Если k___!=8, remem
cpi s___, 0x02 ; Сравнили s___ и 2
brsh lbl_8 ; Если s___>=2, lbl_8
ldi s___, 0x00 ; 0--->s___
jmp print ; Перешли на Вывод
lbl_8: ;
dec s___ ; ...
dec s___ ; s___-2--->s___
;---------------------------------------------
print: ;
out portb, s___ ; Вывели s___ в порт pb
jmp remem
